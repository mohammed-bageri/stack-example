generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider          = "zod-prisma-types"
  output            = "../shared/src/types/zod"
  useTypeAssertions = true
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String       @id @default(cuid())
  email         String       @unique
  password      String
  name          String
  token         String?
  verified      Boolean?     @default(false)
  passwordToken String?
  image         String?
  about         String?
  facebook      String?
  instagram     String?
  linkedin      String?
  permissions   Permission[]
  Posts         Post[]
  Comments      Comment[]
}

enum Permission {
  CREATE_USER
  UPDATE_USER
  DELETE_USER
  READ_USER
  CREATE_CATEGORY
  UPDATE_CATEGORY
  DELETE_CATEGORY
  READ_CATEGORY
  CREATE_POST
  UPDATE_POST
  DELETE_POST
  READ_POST
  CREATE_COMMENT
  UPDATE_COMMENT
  DELETE_COMMENT
  READ_COMMENT
}

model Category {
  id    String @id @default(cuid())
  name  String
  Posts Post[]
}

model Post {
  id          String     @id @default(cuid())
  title       String
  description String
  body        String
  date        DateTime   @default(now())
  header      String
  Author      User       @relation(fields: [authorId], references: [id])
  authorId    String
  Categories  Category[]
  Comments    Comment[]
}

model Comment {
  id     String  @id @default(cuid())
  body   String
  Post   Post    @relation(fields: [postId], references: [id])
  postId String
  User   User?   @relation(fields: [userId], references: [id])
  userId String?
}
